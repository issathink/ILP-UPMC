<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="grammar1rng">
    <define name="program">
      <element name="program">
        <zeroOrMore>
          <ref name="functionDefinition"/>
        </zeroOrMore>
        <oneOrMore>
          <ref name="invocation"/>
        </oneOrMore>
      </element>
    </define>
  </include>
  <define name="expression" combine="choice">
    <choice>
      <ref name="affectation"/>
      <ref name="loop"/>
    </choice>
  </define>
  <define name="affectation">
    <element name="affectation">
      <attribute name="name">
        <data type="Name">
          <except>
            <data type="Name">
              <param name="pattern">(ilp|ILP)</param>
            </data>
          </except>
        </data>
      </attribute>
      <element name="value">
        <ref name="expression"/>
      </element>
    </element>
  </define>
  <define name="loop">
    <element name="loop">
      <element name="condition">
        <ref name="expression"/>
      </element>
      <element name="body">
        <oneOrMore>
          <ref name="expression"/>
        </oneOrMore>
      </element>
    </element>
  </define>
  <define name="functionDefinition">
    <element name="functionDefinition">
      <attribute name="name">
        <data type="Name">
          <except>
            <data type="Name">
              <param name="pattern">(ilp|ILP)</param>
            </data>
          </except>
        </data>
      </attribute>
      <element name="returnType">
        <ref name="constant"/>
      </element>
      <zeroOrMore>
        <element name="argument">
          <ref name="constant"/>
        </element>
      </zeroOrMore>
      <element name="body">
        <oneOrMore>
          <ref name="expression"/>
        </oneOrMore>
      </element>
    </element>
  </define>
  <define name="invocationFunction">
    <element name="invocationFunction">
      <attribute name="name">
        <data type="Name">
          <except>
            <data type="Name">
              <param name="pattern">(ilp|ILP)</param>
            </data>
          </except>
        </data>
      </attribute>
      <zeroOrMore>
        <element name="argument">
          <ref name="expression"/>
        </element>
      </zeroOrMore>
    </element>
  </define>
</grammar>
<!-- end of grammar1-tme2.rnc -->
